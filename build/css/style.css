html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
time,
mark,
audio,
video,
button {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
  box-sizing: border-box;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

*::before,
*::after,
*:before,
*:after {
  box-sizing: border-box;
}

ol,
ul,
li {
  list-style: none;
}

li {
  list-style-type: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

a,
a:hover,
a:link,
a:visited,
a:focus,
img {
  border: 0;
  color: inherit;
  text-decoration: none;
}

*:focus,
a:focus,
a:active,
a:hover {
  outline: 0;
}

a:before,
a:after {
  box-sizing: border-box;
}

img {
  max-width: 100%;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

input,
textarea {
  border-radius: 0;
  box-sizing: border-box;
}

input[type="text"],
textarea {
  -webkit-appearance: none;
}

input[type="text"]::-ms-clear,
textarea::-ms-clear {
  display: none;
}

button,
select {
  text-transform: none;
}

button {
  overflow: visible;
  padding: 0px;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

textarea {
  overflow: auto;
}

ins {
  text-decoration: none;
}

del {
  text-decoration: line-through;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

sub,
sup {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  background: transparent;
  box-sizing: border-box;
}

blockquote,
q {
  quotes: none;
}

/* @include genFont('Roboto'); */

/* ------------------------- Helpers ------------------------- */

.centerlayer {
  margin-left: 0;
  width: 100%;
}

.content {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: flex;
  justify-content: space-between;
  margin-right: -15px;
  margin-left: -15px;
}

.row .col-mm {
  padding-left: 15px;
  padding-right: 15px;
}

.content::after,
.clearfix::after {
  content: '';
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
}

.d-flex {
  display: flex;
}

.d-inlineb {
  font-size: 0;
}

.d-inlineb > li {
  display: inline-block;
  vertical-align: top;
  font-size: 1rem;
}

.mr-auto {
  margin-right: auto;
}

.text-overflow {
  display: block;
  overflow: hidden;
  -ms-text-overflow: ellipsis;
  white-space: nowrap;
}

/* ------------------------- \Helpers ------------------------- */

/* ------------------------- Forms ------------------------- */

input,
button,
textarea {
  border: none;
  box-sizing: border-box;
}

input[type='text'],
button[type='submit'],
textarea {
  width: 100%;
  height: 40px;
  background: #fff;
}

.modal-window input[type='text'],
.modal-window
button[type='submit'],
.modal-window
textarea {
  padding-left: 15px;
  padding-right: 15px;
  margin-bottom: 15px;
  width: 90%;
  height: 40px;
}

.modal-window button[type='submit'] {
  text-transform: uppercase;
  color: #ff0;
}

button[type='submit']:hover {
  opacity: 0.8;
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  font-size: 12px;
  color: #656d78;
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder,
input::-moz-placeholder,
textarea::-moz-placeholder,
input:-ms-input-placeholder,
textarea:-ms-input-placeholder,
input::placeholder,
textarea::placeholder {
  font-size: 12px;
  color: #656d78;
}

input:focus,
textarea:focus {
  opacity: 0.8;
}

/* ------------------------- \Forms ------------------------- */

/* ------------------------- Modals ------------------------- */

.modal-open {
  background: transparent;
  cursor: pointer;
}

.modal-open:hover {
  opacity: 0.8;
}

.modal-bg {
  position: fixed;
  z-index: 1000;
  top: 0;
  left: 0;
  display: none;
  background: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100%;
}

.modal-close {
  position: absolute;
  top: 2px;
  right: 4px;
  color: #fff;
  cursor: pointer;
  line-height: 1;
}

.modal-window {
  position: fixed;
  z-index: 1100;
  top: 50%;
  left: 50%;
  display: none;
  padding: 40px 0 20px;
  width: 300px;
  background: rgba(0, 0, 0, 0.5);
  text-align: center;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

/* ------------------------- \Modals ------------------------- */

/**------------------------- Buttons -------------------------*/

.btn,
a.btn {
  display: inline-block;
  width: 230px;
  height: 65px;
  font-size: 24px;
  font-weight: 600;
  text-align: center;
  text-transform: uppercase;
  transition: background 1s linear;
  border-radius: 28px;
}

.btn-blue,
a.btn-blue {
  color: #fff;
  background: #13c9fd;
}

.btn-blue:hover,
a.btn-blue:hover {
  background: #555453;
  color: #fff;
}

/**------------------------- \Buttons -------------------------*/

body {
  font: 16px/1.5 'Arial', serif;
  color: #555453;
}

h2 {
  font-size: 2.75rem;
  font-family: 'Arial', serif;
  text-align: center;
  text-transform: uppercase;
}

@media (prefers-reduced-motion: reduce) {
  * {
    -webkit-animation-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
